// <auto-generated />
using System;
using Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AnimalShelterContext))]
    [Migration("20241225191021_MigrationShelter")]
    partial class MigrationShelter
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Adopter", b =>
                {
                    b.Property<int>("AdopterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdopterID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdopterId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AdopterId")
                        .HasName("PK__Adopters__499FD2EDCC552BF4");

                    b.ToTable("Adopters");
                });

            modelBuilder.Entity("Domain.Models.Adoption", b =>
                {
                    b.Property<int>("AdoptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdoptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdoptionId"));

                    b.Property<int?>("AdopterId")
                        .HasColumnType("int")
                        .HasColumnName("AdopterID");

                    b.Property<DateTime?>("AdoptionDate")
                        .HasColumnType("date");

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("AnimalID");

                    b.HasKey("AdoptionId")
                        .HasName("PK__Adoption__38BABF0C102C76A9");

                    b.HasIndex("AdopterId");

                    b.HasIndex("AnimalId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnimalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalId"));

                    b.Property<DateTime?>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("BreedId")
                        .HasColumnType("int")
                        .HasColumnName("BreedID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int")
                        .HasColumnName("SpeciesID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AnimalId")
                        .HasName("PK__Animals__A21A732785DFBB29");

                    b.HasIndex("BreedId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Domain.Models.AuditLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("LogId")
                        .HasName("PK__AuditLog__5E5499A8065A2B35");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLog", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Breed", b =>
                {
                    b.Property<int>("BreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BreedID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreedId"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int")
                        .HasColumnName("SpeciesID");

                    b.HasKey("BreedId")
                        .HasName("PK__Breeds__D1E9AEBD4A778596");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Domain.Models.Donation", b =>
                {
                    b.Property<int>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DonationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonationId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DonationDate")
                        .HasColumnType("date");

                    b.Property<string>("DonorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DonationId")
                        .HasName("PK__Donation__C5082EDB451840BE");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Domain.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("EventName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EventId")
                        .HasName("PK__Events__7944C870EE38317F");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Domain.Models.EventAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttendanceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<int?>("VolunteerId")
                        .HasColumnType("int")
                        .HasColumnName("VolunteerID");

                    b.HasKey("AttendanceId")
                        .HasName("PK__EventAtt__8B69263C69ECB661");

                    b.HasIndex("EventId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("EventAttendance", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ExpenseDate")
                        .HasColumnType("date");

                    b.HasKey("ExpenseId")
                        .HasName("PK__Expenses__1445CFF3AA218300");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Domain.Models.Income", b =>
                {
                    b.Property<int>("IncomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IncomeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncomeId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("IncomeDate")
                        .HasColumnType("date");

                    b.HasKey("IncomeId")
                        .HasName("PK__Income__60DFC66CB2641682");

                    b.ToTable("Income", (string)null);
                });

            modelBuilder.Entity("Domain.Models.MedicalRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("AnimalID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("date");

                    b.HasKey("RecordId")
                        .HasName("PK__MedicalR__FBDF78C94DDEAD67");

                    b.HasIndex("AnimalId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("Domain.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3AB76301EA");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Domain.Models.Species", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpeciesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpeciesId")
                        .HasName("PK__Species__A938047FC77B7BF1");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("Domain.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StaffId")
                        .HasName("PK__Staff__96D4AAF751EB2EEE");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Domain.Models.Supply", b =>
                {
                    b.Property<int>("SupplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplyId"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplyId")
                        .HasName("PK__Supplies__7CDD6C8E79F354E4");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("Domain.Models.SupplyOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplyId")
                        .HasColumnType("int")
                        .HasColumnName("SupplyID");

                    b.HasKey("OrderId")
                        .HasName("PK__SupplyOr__C3905BAF82BF2753");

                    b.HasIndex("SupplyId");

                    b.ToTable("SupplyOrders");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC49458A16");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A5593690190");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Domain.Models.Vaccination", b =>
                {
                    b.Property<int>("VaccinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VaccinationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccinationId"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("AnimalID");

                    b.Property<DateTime?>("VaccinationDate")
                        .HasColumnType("date");

                    b.Property<string>("VaccineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VaccinationId")
                        .HasName("PK__Vaccinat__466BCFA791303D76");

                    b.HasIndex("AnimalId");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("Domain.Models.Volunteer", b =>
                {
                    b.Property<int>("VolunteerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VolunteerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VolunteerId"));

                    b.Property<string>("Availability")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VolunteerId")
                        .HasName("PK__Voluntee__716F6FCC41A27D56");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("Domain.Models.Adoption", b =>
                {
                    b.HasOne("Domain.Models.Adopter", "Adopter")
                        .WithMany("Adoptions")
                        .HasForeignKey("AdopterId")
                        .HasConstraintName("FK__Adoptions__Adopt__4316F928");

                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("Adoptions")
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Adoptions__Anima__4222D4EF");

                    b.Navigation("Adopter");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.HasOne("Domain.Models.Breed", "Breed")
                        .WithMany("Animals")
                        .HasForeignKey("BreedId")
                        .HasConstraintName("FK__Animals__BreedID__3D5E1FD2");

                    b.HasOne("Domain.Models.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId")
                        .HasConstraintName("FK__Animals__Species__3C69FB99");

                    b.Navigation("Breed");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Domain.Models.AuditLog", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__AuditLog__UserID__6754599E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Breed", b =>
                {
                    b.HasOne("Domain.Models.Species", "Species")
                        .WithMany("Breeds")
                        .HasForeignKey("SpeciesId")
                        .HasConstraintName("FK__Breeds__SpeciesI__398D8EEE");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Domain.Models.EventAttendance", b =>
                {
                    b.HasOne("Domain.Models.Event", "Event")
                        .WithMany("EventAttendances")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventAtte__Event__534D60F1");

                    b.HasOne("Domain.Models.Volunteer", "Volunteer")
                        .WithMany("EventAttendances")
                        .HasForeignKey("VolunteerId")
                        .HasConstraintName("FK__EventAtte__Volun__5441852A");

                    b.Navigation("Event");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("Domain.Models.MedicalRecord", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__MedicalRe__Anima__48CFD27E");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Domain.Models.SupplyOrder", b =>
                {
                    b.HasOne("Domain.Models.Supply", "Supply")
                        .WithMany("SupplyOrders")
                        .HasForeignKey("SupplyId")
                        .HasConstraintName("FK__SupplyOrd__Suppl__59063A47");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("Domain.Models.UserRole", b =>
                {
                    b.HasOne("Domain.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRoles__RoleI__6477ECF3");

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRoles__UserI__6383C8BA");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Vaccination", b =>
                {
                    b.HasOne("Domain.Models.Animal", "Animal")
                        .WithMany("Vaccinations")
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Vaccinati__Anima__45F365D3");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Domain.Models.Adopter", b =>
                {
                    b.Navigation("Adoptions");
                });

            modelBuilder.Entity("Domain.Models.Animal", b =>
                {
                    b.Navigation("Adoptions");

                    b.Navigation("MedicalRecords");

                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("Domain.Models.Breed", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Domain.Models.Event", b =>
                {
                    b.Navigation("EventAttendances");
                });

            modelBuilder.Entity("Domain.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Domain.Models.Species", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("Domain.Models.Supply", b =>
                {
                    b.Navigation("SupplyOrders");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Domain.Models.Volunteer", b =>
                {
                    b.Navigation("EventAttendances");
                });
#pragma warning restore 612, 618
        }
    }
}
